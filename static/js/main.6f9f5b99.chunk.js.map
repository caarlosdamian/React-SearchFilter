{"version":3,"sources":["Components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","placeholder","data","useState","filterData","setFilterData","inputRef","useRef","className","ref","type","onChange","event","searchWord","target","value","newfilter","filter","title","toLowerCase","includes","length","id","onClick","current","slice","map","key","href","link","rel","App","BookData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o1sBA+DeA,MA1Df,YAA2C,IAAtBC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KAAQ,EACJC,mBAAS,IADL,mBACjCC,EADiC,KACrBC,EADqB,KAElCC,EAAWC,iBAAO,IAiBxB,OACE,sBAAKC,UAAU,SAAf,UACE,oBAAIA,UAAU,eAAd,4BACA,sBAAKA,UAAU,eAAf,UACE,uBACEC,IAAKH,EACLI,KAAK,OACLT,YAAaA,EACbU,SAvBa,SAACC,GACpB,IAAMC,EAAaD,EAAME,OAAOC,MAC1BC,EAAYd,EAAKe,QAAO,SAACF,GAC7B,OAAOA,EAAMG,MAAMC,cAAcC,SAASP,EAAWM,kBAGrDd,EADiB,KAAfQ,EACY,GAEAG,MAiBZ,qBAAKR,UAAU,aAAf,SACyB,IAAtBJ,EAAWiB,OACV,cAAC,IAAD,IAEA,cAAC,IAAD,CAAWC,GAAG,WAAWC,QAlBhB,WACjBlB,EAAc,IACdC,EAASkB,QAAQT,MAAQ,WAoBA,IAAtBX,EAAWiB,QACV,qBAAKb,UAAU,aAAf,SACGJ,EAAWqB,MAAM,EAAG,IAAIC,KAAI,SAACX,EAAOY,GACnC,OACE,mBACEnB,UAAU,WACVoB,KAAMb,EAAMc,KACZf,OAAO,SACPgB,IAAI,sBAJN,SAOE,4BAAIf,EAAMG,SAFLS,Y,QCxCNI,MARf,WACE,OACE,qBAAKvB,UAAU,MAAf,SACE,cAAC,EAAD,CAAWP,YAAY,eAAeC,KAAM8B,OCMnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f9f5b99.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"../Styles/SearchBar.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nfunction SearchBar({ placeholder, data }) {\n  const [filterData, setFilterData] = useState([]);\n  const inputRef = useRef(\"\");\n\n  const handleFilter = (event) => {\n    const searchWord = event.target.value;\n    const newfilter = data.filter((value) => {\n      return value.title.toLowerCase().includes(searchWord.toLowerCase());\n    });\n    if (searchWord === \"\") {\n      setFilterData([]);\n    } else {\n      setFilterData(newfilter);\n    }\n  };\n  const clearInput = () => {\n    setFilterData([]);\n    inputRef.current.value = \"\";\n  };\n  return (\n    <div className=\"search\">\n      <h1 className=\"searchHeader\">The Book Store</h1>\n      <div className=\"searchInputs\">\n        <input\n          ref={inputRef}\n          type=\"text\"\n          placeholder={placeholder}\n          onChange={handleFilter}\n        ></input>\n        <div className=\"searchIcon\">\n          {filterData.length === 0 ? (\n            <SearchIcon />\n          ) : (\n            <CloseIcon id=\"clearBtn\" onClick={clearInput} />\n          )}\n        </div>\n      </div>\n      {filterData.length !== 0 && (\n        <div className=\"dataResult\">\n          {filterData.slice(0, 15).map((value, key) => {\n            return (\n              <a\n                className=\"dataItem\"\n                href={value.link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                key={key}\n              >\n                <p>{value.title}</p>\n              </a>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import './App.css';\nimport SearchBar  from './Components/SearchBar'\nimport BookData from './helpers/Data.json'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchBar placeholder=\"Enter Boooks\" data={BookData}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}